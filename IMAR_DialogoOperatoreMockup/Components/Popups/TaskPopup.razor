@using IMAR_DialogoOperatore.Application
@using IMAR_DialogoOperatore.Application.Interfaces.Utilities
@using IMAR_DialogoOperatore.Components.SubComponents
@using IMAR_DialogoOperatore.Interfaces.Observers
@using IMAR_DialogoOperatore.ViewModels;

@inject TaskPopupViewModel TaskPopupViewModel
@inject IDialogoOperatoreObserver DialogoOperatoreObserver
@inject IAutoLogoutUtility AutoLogoutUtility

<DxPopup @bind-Visible="@TaskPopupViewModel.Visible"
		 HeaderText="Invio notifica errore"
		 ShowHeader="true"
		 ShowCloseButton="true"
		 CloseOnOutsideClick="false"
		 ShowFooter="true"
		 EnableAdaptivity="true"
		 Width="35%"
		 @onkeydown="RestartAutoLogoutTimer"
		 @onclick="RestartAutoLogoutTimer"
		 @onmousemove="RestartAutoLogoutTimer"
		 @onmousedown="RestartAutoLogoutTimer">
	<BodyContentTemplate>
		<DxGridLayout>
			<Rows>
				<DxGridLayoutRow Height="auto" />
				<DxGridLayoutRow Height="auto" />
				<DxGridLayoutRow Height="auto" />
			</Rows>

			<Columns>
				<DxGridLayoutColumn Width="5%" />
				<DxGridLayoutColumn />
				<DxGridLayoutColumn Width="5%" />
			</Columns>

			<Items>
				<DxGridLayoutItem Row="0" Column="1">
					<Template>
						<div class="d-flex justify-content-center align-items-center h-100 testo-piccolo mt-2">
							<label>CATEGORIA ERRORE</label>
						</div>
					</Template>
				</DxGridLayoutItem>

				<DxGridLayoutItem Row="1" Column="1">
					<Template>
						<DxComboBox Data="@TaskPopupViewModel.CategorieErrori"
									@bind-Value="@TaskPopupViewModel.CategoriaErroreSelezionata"
									CssClass="mt-2" />
					</Template>
				</DxGridLayoutItem>

				<DxGridLayoutItem Row="2" Column="1">
					<Template>
						<CompilatoreTask />
					</Template>
				</DxGridLayoutItem>
			</Items>
		</DxGridLayout>
	</BodyContentTemplate>

	<FooterContentTemplate>
		<DxButton Text="Annulla"
				  Click="@AnnullaHandler"
				  RenderStyle="ButtonRenderStyle.Warning"
				  RenderStyleMode="ButtonRenderStyleMode.Outline"
				  CssClass="d-flex justify-content-center align-items-center conferma-dettagli" />

		<DxButton Text="Conferma"
				  Click="@ConfermaHandler"
				  Enabled="TaskPopupViewModel.InviaTaskCommand.CanExecute(null)"
				  RenderStyle="ButtonRenderStyle.Warning"
				  CssClass="d-flex justify-content-center align-items-center conferma-dettagli" />
	</FooterContentTemplate>
</DxPopup>

@code {
	protected override void OnInitialized()
	{
		TaskPopupViewModel.NotifyStateChanged += TaskPopupViewModel_NotifyStateChanged;
		base.OnInitialized();
	}

	private async void TaskPopupViewModel_NotifyStateChanged() => await InvokeAsync(StateHasChanged);

	private void RestartAutoLogoutTimer()
	{
		if (isRestartTimerActive())
			AutoLogoutUtility.RestartTimer();
	}

	private bool isRestartTimerActive()
	{
		return AutoLogoutUtility.IsActive &&
						DialogoOperatoreObserver.OperatoreSelezionato != null &&
						DialogoOperatoreObserver.OperatoreSelezionato.Stato != Costanti.ASSENTE &&
						DialogoOperatoreObserver.OperatoreSelezionato.Stato != Costanti.IN_PAUSA;
	}

	private void AnnullaHandler()
	{
		ChiudiPopup();
	}

	private void ConfermaHandler()
	{
		TaskPopupViewModel.InviaTaskCommand.Execute(null);
		ChiudiPopup();
	}

	private void ChiudiPopup()
	{
		TaskPopupViewModel.Visible = false;
	}
}
