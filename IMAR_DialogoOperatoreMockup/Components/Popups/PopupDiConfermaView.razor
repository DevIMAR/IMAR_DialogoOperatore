@using IMAR_DialogoOperatore.ViewModels

@inject PopupDiConfermaViewModel PopupDiConfermaViewModel

<DxPopup @bind-Visible="@PopupDiConfermaViewModel.IsVisible"
		 ShowFooter="true">
	<BodyContentTemplate>
		<div style="white-space:pre-line;
				    font-size:1.668vh;">
			@PopupDiConfermaViewModel.Testo
		</div>
	</BodyContentTemplate>

	<FooterContentTemplate>
		<DxButton Text="Annulla"
				  Click="@AnnullaHandler"
				  RenderStyle="ButtonRenderStyle.Secondary"
				  class="d-flex justify-content-center align-items-center"
				  style="padding-top:5%;
						 padding-bottom:5%;
						 font-size:1.668vh;" />

		<DxButton Text="Conferma"
				  Click="@ConfermaHandler"
				  RenderStyle="ButtonRenderStyle.Primary"
				  class="d-flex justify-content-center align-items-center"
				  style="padding-top:5%;
					     padding-bottom:5%;
						 font-size:1.668vh;" />
	</FooterContentTemplate>
</DxPopup>

@code {
	protected override Task OnInitializedAsync()
	{
		PopupDiConfermaViewModel.NotifyStateChanged += PopupDiConfermaViewModel_NotifyStateChanged;

		return base.OnInitializedAsync();
	}

	private async void PopupDiConfermaViewModel_NotifyStateChanged()
	{
		await InvokeAsync(StateHasChanged);
	}

	void AnnullaHandler()
	{
		PopupDiConfermaViewModel.RispostaPopupDiConfermaCommand.Execute(false);
	}

	void ConfermaHandler()
	{
		PopupDiConfermaViewModel.RispostaPopupDiConfermaCommand.Execute(true);
	}
}
